#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#define MAX_STATES 100
#define MAX_SYMBOLS 100

int n, m; // number of states and number of input symbols
bool epsilon[MAX_STATES][MAX_STATES]; // epsilon transitions
bool visited[MAX_STATES]; // to keep track of visited states

// function to find the epsilon closure of a given state
void epsilon_closure(int state, bool closure[]) {
    closure[state] = true;
    for (int i = 0; i < n; i++) {
        if (epsilon[state][i] && !closure[i]) {
            epsilon_closure(i, closure);
        }
    }
}

// function to print the epsilon closure of all the states
void print_epsilon_closure() {
    printf("Epsilon Closures:\n");
    for (int i = 0; i < n; i++) {
        bool closure[MAX_STATES] = {false};
        epsilon_closure(i, closure);
        printf("ε(%d) = { ", i);
        for (int j = 0; j < n; j++) {
            if (closure[j]) {
                printf("%d ", j);
            }
        }
        printf("}\n");
    }
}

int main() {
    // read input
    printf("Enter the number of states: ");
    scanf("%d", &n);
    printf("Enter the number of input symbols: ");
    scanf("%d", &m);
    printf("Enter the epsilon transitions:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int t;
            printf("ε(%d, %d) = ", i, j);
            scanf("%d", &t);
            epsilon[i][j] = (t == 1);
        }
    }

    // print epsilon closure of all the states
    print_epsilon_closure();

    return 0;
}
